<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="564px" preserveAspectRatio="none" style="width:982px;height:564px;" version="1.1" viewBox="0 0 982 564" width="982px" zoomAndPan="magnify"><defs><filter height="300%" id="fk31lgp21q95g" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Queue--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="112.0234" id="Queue" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="187" y="33.5"/><ellipse cx="286.25" cy="49.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M287.2031,46.2813 L287.2031,52.7969 L288.9219,52.7969 C289.375,52.7969 289.5156,52.8281 289.6875,52.9531 C289.9219,53.125 290.0313,53.375 290.0313,53.6563 C290.0313,54.2188 289.6719,54.5 288.9219,54.5 L283.7813,54.5 C283.375,54.5 283.1719,54.4531 283.0156,54.3281 C282.7969,54.1719 282.6563,53.9063 282.6563,53.6563 C282.6563,53.3594 282.8125,53.0781 283.0625,52.9219 C283.2188,52.8125 283.3438,52.7969 283.7813,52.7969 L285.5,52.7969 L285.5,46.2813 L283.7813,46.2813 C283.3594,46.2813 283.1719,46.25 283.0156,46.1406 C282.7969,45.9688 282.6563,45.7188 282.6563,45.4375 C282.6563,45.1563 282.8125,44.8594 283.0625,44.7031 C283.2188,44.6094 283.3438,44.5938 283.7813,44.5938 L288.9219,44.5938 C289.375,44.5938 289.5156,44.625 289.6875,44.7344 C289.9219,44.9063 290.0313,45.1719 290.0313,45.4375 C290.0313,45.7344 289.8906,46.0156 289.625,46.1719 C289.5,46.25 289.3125,46.2813 288.9219,46.2813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="40" x="306.75" y="53.6543">Queue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="188" x2="433" y1="65.5" y2="65.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="193" y="79.7104">Store</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="188" x2="433" y1="86.3047" y2="86.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="193" y="100.5151">Pop(PopProcessFunc) (interface{}, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="193" y="113.3198">AddIfNotPresent(interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="193" y="126.1245">HasSynced() bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="193" y="138.9292">Close()</text><!--class Store--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="163.2422" id="Store" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="469" y="8"/><ellipse cx="629.25" cy="24" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M630.2031,20.7813 L630.2031,27.2969 L631.9219,27.2969 C632.375,27.2969 632.5156,27.3281 632.6875,27.4531 C632.9219,27.625 633.0313,27.875 633.0313,28.1563 C633.0313,28.7188 632.6719,29 631.9219,29 L626.7813,29 C626.375,29 626.1719,28.9531 626.0156,28.8281 C625.7969,28.6719 625.6563,28.4063 625.6563,28.1563 C625.6563,27.8594 625.8125,27.5781 626.0625,27.4219 C626.2188,27.3125 626.3438,27.2969 626.7813,27.2969 L628.5,27.2969 L628.5,20.7813 L626.7813,20.7813 C626.3594,20.7813 626.1719,20.75 626.0156,20.6406 C625.7969,20.4688 625.6563,20.2188 625.6563,19.9375 C625.6563,19.6563 625.8125,19.3594 626.0625,19.2031 C626.2188,19.1094 626.3438,19.0938 626.7813,19.0938 L631.9219,19.0938 C632.375,19.0938 632.5156,19.125 632.6875,19.2344 C632.9219,19.4063 633.0313,19.6719 633.0313,19.9375 C633.0313,20.2344 632.8906,20.5156 632.625,20.6719 C632.5,20.75 632.3125,20.7813 631.9219,20.7813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="649.75" y="28.1543">Store</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="470" x2="831" y1="40" y2="40"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="470" x2="831" y1="48" y2="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="475" y="62.2104">Add(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="475" y="75.0151">Update(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="475" y="87.8198">Delete(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="475" y="100.6245">List() []interface{}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="475" y="113.4292">ListKeys() []string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="475" y="126.2339">Get(obj interface{}) (item interface{}, exists bool, err error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="475" y="139.0386">GetByKey(key string) (item interface{}, exists bool, err error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="475" y="151.8433">Replace([]interface{}, string) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="475" y="164.6479">Resync() error</text><!--class DeltaFIFO--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="188.8516" id="DeltaFIFO" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="196" y="231"/><ellipse cx="276.75" cy="247" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M279.0938,242.6719 L279.2656,242.75 C279.4844,242.4375 279.6875,242.3438 279.9844,242.3438 C280.2813,242.3438 280.5625,242.4844 280.7188,242.75 C280.8125,242.9063 280.8281,243.0313 280.8281,243.4688 L280.8281,244.8906 C280.8281,245.3125 280.7969,245.5 280.6875,245.6563 C280.5156,245.875 280.25,246.0156 279.9844,246.0156 C279.7656,246.0156 279.5313,245.9063 279.3906,245.7656 C279.25,245.6406 279.2188,245.5156 279.1563,245.1094 C279.0625,244.7031 278.8906,244.4844 278.4063,244.2031 C277.9375,243.9531 277.3281,243.7969 276.75,243.7969 C275.0156,243.7969 273.7656,245.1094 273.7656,246.8906 L273.7656,247.9844 C273.7656,249.6875 275.0625,250.7813 277.1094,250.7813 C277.875,250.7813 278.5625,250.6563 278.9844,250.3906 C279.1719,250.2969 279.1719,250.2969 279.625,249.8125 C279.8125,249.625 280.0156,249.5469 280.2344,249.5469 C280.7031,249.5469 281.0938,249.9375 281.0938,250.3906 C281.0938,250.7813 280.7656,251.2344 280.1875,251.6406 C279.4375,252.1875 278.2813,252.4844 277.0625,252.4844 C274.1719,252.4844 272.0625,250.5938 272.0625,248.0156 L272.0625,246.8906 C272.0625,244.1719 274.0625,242.0938 276.6875,242.0938 C277.5625,242.0938 278.1563,242.2344 279.0938,242.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="297.25" y="251.1543">DeltaFIFO</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="197" x2="424" y1="263" y2="263"/><ellipse cx="207" cy="274.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="216" y="277.2104">lock sync.RWMutex</text><ellipse cx="207" cy="287.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="216" y="290.0151">cond sync.Cond</text><ellipse cx="207" cy="300.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="216" y="302.8198">items map[string]Deltas</text><ellipse cx="207" cy="313.3164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="216" y="315.6245">queue []string</text><ellipse cx="207" cy="326.1211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="216" y="328.4292">populated bool</text><ellipse cx="207" cy="338.9258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="216" y="341.2339">initialPopulationCount int</text><ellipse cx="207" cy="351.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="216" y="354.0386">keyFunc KeyFunc</text><ellipse cx="207" cy="364.5352" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="216" y="366.8433">deltaCompressor DeltaCompressor</text><ellipse cx="207" cy="377.3398" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="216" y="379.6479">knownObjects KeyListerGetter</text><ellipse cx="207" cy="390.1445" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="216" y="392.4526">closed     bool</text><ellipse cx="207" cy="402.9492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="216" y="405.2573">closedLock sync.Mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="197" x2="424" y1="411.8516" y2="411.8516"/><!--class Deltas--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="48" id="Deltas" style="stroke: #A80036; stroke-width: 1.5;" width="72" x="460.5" y="301.5"/><ellipse cx="475.5" cy="317.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M477.8438,313.1719 L478.0156,313.25 C478.2344,312.9375 478.4375,312.8438 478.7344,312.8438 C479.0313,312.8438 479.3125,312.9844 479.4688,313.25 C479.5625,313.4063 479.5781,313.5313 479.5781,313.9688 L479.5781,315.3906 C479.5781,315.8125 479.5469,316 479.4375,316.1563 C479.2656,316.375 479,316.5156 478.7344,316.5156 C478.5156,316.5156 478.2813,316.4063 478.1406,316.2656 C478,316.1406 477.9688,316.0156 477.9063,315.6094 C477.8125,315.2031 477.6406,314.9844 477.1563,314.7031 C476.6875,314.4531 476.0781,314.2969 475.5,314.2969 C473.7656,314.2969 472.5156,315.6094 472.5156,317.3906 L472.5156,318.4844 C472.5156,320.1875 473.8125,321.2813 475.8594,321.2813 C476.625,321.2813 477.3125,321.1563 477.7344,320.8906 C477.9219,320.7969 477.9219,320.7969 478.375,320.3125 C478.5625,320.125 478.7656,320.0469 478.9844,320.0469 C479.4531,320.0469 479.8438,320.4375 479.8438,320.8906 C479.8438,321.2813 479.5156,321.7344 478.9375,322.1406 C478.1875,322.6875 477.0313,322.9844 475.8125,322.9844 C472.9219,322.9844 470.8125,321.0938 470.8125,318.5156 L470.8125,317.3906 C470.8125,314.6719 472.8125,312.5938 475.4375,312.5938 C476.3125,312.5938 476.9063,312.7344 477.8438,313.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="489.5" y="321.6543">Deltas</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="461.5" x2="531.5" y1="333.5" y2="333.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="461.5" x2="531.5" y1="341.5" y2="341.5"/><!--class KeyListerGetter--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="73.6094" id="KeyListerGetter" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="246" y="480"/><ellipse cx="261" cy="496" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M261.9531,492.7813 L261.9531,499.2969 L263.6719,499.2969 C264.125,499.2969 264.2656,499.3281 264.4375,499.4531 C264.6719,499.625 264.7813,499.875 264.7813,500.1563 C264.7813,500.7188 264.4219,501 263.6719,501 L258.5313,501 C258.125,501 257.9219,500.9531 257.7656,500.8281 C257.5469,500.6719 257.4063,500.4063 257.4063,500.1563 C257.4063,499.8594 257.5625,499.5781 257.8125,499.4219 C257.9688,499.3125 258.0938,499.2969 258.5313,499.2969 L260.25,499.2969 L260.25,492.7813 L258.5313,492.7813 C258.1094,492.7813 257.9219,492.75 257.7656,492.6406 C257.5469,492.4688 257.4063,492.2188 257.4063,491.9375 C257.4063,491.6563 257.5625,491.3594 257.8125,491.2031 C257.9688,491.1094 258.0938,491.0938 258.5313,491.0938 L263.6719,491.0938 C264.125,491.0938 264.2656,491.125 264.4375,491.2344 C264.6719,491.4063 264.7813,491.6719 264.7813,491.9375 C264.7813,492.2344 264.6406,492.5156 264.375,492.6719 C264.25,492.75 264.0625,492.7813 263.6719,492.7813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="275" y="500.1543">KeyListerGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="247" x2="374" y1="512" y2="512"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="252" y="526.2104">KeyLister</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="252" y="539.0151">KeyGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="247" x2="374" y1="545.6094" y2="545.6094"/><!--class DeltaCompressor--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="60.8047" id="DeltaCompressor" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="6" y="295"/><ellipse cx="28.65" cy="311" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29.6031,307.7813 L29.6031,314.2969 L31.3219,314.2969 C31.775,314.2969 31.9156,314.3281 32.0875,314.4531 C32.3219,314.625 32.4313,314.875 32.4313,315.1563 C32.4313,315.7188 32.0719,316 31.3219,316 L26.1813,316 C25.775,316 25.5719,315.9531 25.4156,315.8281 C25.1969,315.6719 25.0563,315.4063 25.0563,315.1563 C25.0563,314.8594 25.2125,314.5781 25.4625,314.4219 C25.6188,314.3125 25.7438,314.2969 26.1813,314.2969 L27.9,314.2969 L27.9,307.7813 L26.1813,307.7813 C25.7594,307.7813 25.5719,307.75 25.4156,307.6406 C25.1969,307.4688 25.0563,307.2188 25.0563,306.9375 C25.0563,306.6563 25.2125,306.3594 25.4625,306.2031 C25.6188,306.1094 25.7438,306.0938 26.1813,306.0938 L31.3219,306.0938 C31.775,306.0938 31.9156,306.125 32.0875,306.2344 C32.3219,306.4063 32.4313,306.6719 32.4313,306.9375 C32.4313,307.2344 32.2906,307.5156 32.025,307.6719 C31.9,307.75 31.7125,307.7813 31.3219,307.7813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="44.35" y="315.1543">DeltaCompressor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="160" y1="327" y2="327"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="160" y1="335" y2="335"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="12" y="349.2104">Compress(Deltas) Deltas</text><!--class Delta--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="73.6094" id="Delta" style="stroke: #A80036; stroke-width: 1.5;" width="116" x="567.5" y="288.5"/><ellipse cx="605.45" cy="304.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M607.7938,300.1719 L607.9656,300.25 C608.1844,299.9375 608.3875,299.8438 608.6844,299.8438 C608.9813,299.8438 609.2625,299.9844 609.4188,300.25 C609.5125,300.4063 609.5281,300.5313 609.5281,300.9688 L609.5281,302.3906 C609.5281,302.8125 609.4969,303 609.3875,303.1563 C609.2156,303.375 608.95,303.5156 608.6844,303.5156 C608.4656,303.5156 608.2313,303.4063 608.0906,303.2656 C607.95,303.1406 607.9188,303.0156 607.8563,302.6094 C607.7625,302.2031 607.5906,301.9844 607.1063,301.7031 C606.6375,301.4531 606.0281,301.2969 605.45,301.2969 C603.7156,301.2969 602.4656,302.6094 602.4656,304.3906 L602.4656,305.4844 C602.4656,307.1875 603.7625,308.2813 605.8094,308.2813 C606.575,308.2813 607.2625,308.1563 607.6844,307.8906 C607.8719,307.7969 607.8719,307.7969 608.325,307.3125 C608.5125,307.125 608.7156,307.0469 608.9344,307.0469 C609.4031,307.0469 609.7938,307.4375 609.7938,307.8906 C609.7938,308.2813 609.4656,308.7344 608.8875,309.1406 C608.1375,309.6875 606.9813,309.9844 605.7625,309.9844 C602.8719,309.9844 600.7625,308.0938 600.7625,305.5156 L600.7625,304.3906 C600.7625,301.6719 602.7625,299.5938 605.3875,299.5938 C606.2625,299.5938 606.8563,299.7344 607.7938,300.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="624.55" y="308.6543">Delta</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="682.5" y1="320.5" y2="320.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="573.5" y="334.7104">Type   DeltaType</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="573.5" y="347.5151">Object interface{}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="682.5" y1="354.1094" y2="354.1094"/><polygon fill="#FBFB77" filter="url(#fk31lgp21q95g)" points="718.5,290,718.5,360.5313,960.5,360.5313,960.5,300,950.5,290,718.5,290" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="718.5,290,718.5,321.5,683.598,325.5,718.5,329.5,718.5,360.5313,960.5,360.5313,960.5,300,950.5,290,718.5,290" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="950.5" x2="950.5" y1="290" y2="300"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="960.5" x2="950.5" y1="300" y2="300"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="724.5" y="307.0669">type Deltas []Delta</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="136" x="724.5" y="322.1997">type DeltaType string</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="221" x="724.5" y="337.3325">type KeyFunc func(obj interface{})</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="744.5" y="352.4653">(string, error)</text><!--class KeyLister--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="60.8047" id="KeyLister" style="stroke: #A80036; stroke-width: 1.5;" width="112" x="98.5" y="486.5"/><ellipse cx="123.85" cy="502.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M124.8031,499.2813 L124.8031,505.7969 L126.5219,505.7969 C126.975,505.7969 127.1156,505.8281 127.2875,505.9531 C127.5219,506.125 127.6313,506.375 127.6313,506.6563 C127.6313,507.2188 127.2719,507.5 126.5219,507.5 L121.3813,507.5 C120.975,507.5 120.7719,507.4531 120.6156,507.3281 C120.3969,507.1719 120.2563,506.9063 120.2563,506.6563 C120.2563,506.3594 120.4125,506.0781 120.6625,505.9219 C120.8188,505.8125 120.9438,505.7969 121.3813,505.7969 L123.1,505.7969 L123.1,499.2813 L121.3813,499.2813 C120.9594,499.2813 120.7719,499.25 120.6156,499.1406 C120.3969,498.9688 120.2563,498.7188 120.2563,498.4375 C120.2563,498.1563 120.4125,497.8594 120.6625,497.7031 C120.8188,497.6094 120.9438,497.5938 121.3813,497.5938 L126.5219,497.5938 C126.975,497.5938 127.1156,497.625 127.2875,497.7344 C127.5219,497.9063 127.6313,498.1719 127.6313,498.4375 C127.6313,498.7344 127.4906,499.0156 127.225,499.1719 C127.1,499.25 126.9125,499.2813 126.5219,499.2813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="140.15" y="506.6543">KeyLister</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="99.5" x2="209.5" y1="518.5" y2="518.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="99.5" x2="209.5" y1="526.5" y2="526.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="104.5" y="540.7104">ListKeys() []string</text><!--class KeyGetter--><rect fill="#FEFECE" filter="url(#fk31lgp21q95g)" height="60.8047" id="KeyGetter" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="410" y="486.5"/><ellipse cx="511.75" cy="502.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M512.7031,499.2813 L512.7031,505.7969 L514.4219,505.7969 C514.875,505.7969 515.0156,505.8281 515.1875,505.9531 C515.4219,506.125 515.5313,506.375 515.5313,506.6563 C515.5313,507.2188 515.1719,507.5 514.4219,507.5 L509.2813,507.5 C508.875,507.5 508.6719,507.4531 508.5156,507.3281 C508.2969,507.1719 508.1563,506.9063 508.1563,506.6563 C508.1563,506.3594 508.3125,506.0781 508.5625,505.9219 C508.7188,505.8125 508.8438,505.7969 509.2813,505.7969 L511,505.7969 L511,499.2813 L509.2813,499.2813 C508.8594,499.2813 508.6719,499.25 508.5156,499.1406 C508.2969,498.9688 508.1563,498.7188 508.1563,498.4375 C508.1563,498.1563 508.3125,497.8594 508.5625,497.7031 C508.7188,497.6094 508.8438,497.5938 509.2813,497.5938 L514.4219,497.5938 C514.875,497.5938 515.0156,497.625 515.1875,497.7344 C515.4219,497.9063 515.5313,498.1719 515.5313,498.4375 C515.5313,498.7344 515.3906,499.0156 515.125,499.1719 C515,499.25 514.8125,499.2813 514.4219,499.2813 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="63" x="532.25" y="506.6543">KeyGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="411" x2="684" y1="518.5" y2="518.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="411" x2="684" y1="526.5" y2="526.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="416" y="540.7104">GetByKey(key string) (interface{}, bool, error)</text><!--link Queue to Store--><path d="M447.017,89.5 C454.241,89.5 461.464,89.5 468.687,89.5 " fill="none" id="Queue-Store" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="434.016,89.5,440.016,93.5,446.016,89.5,440.016,85.5,434.016,89.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Queue to DeltaFIFO--><path d="M310.5,165.942 C310.5,186.604 310.5,209.255 310.5,230.806 " fill="none" id="Queue-DeltaFIFO" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="303.5,165.658,310.5,145.658,317.5,165.658,303.5,165.658" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DeltaFIFO to Deltas--><path d="M425.297,325.5 C435.245,325.5 445.192,325.5 455.14,325.5 " fill="none" id="DeltaFIFO-Deltas" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="460.342,325.5,451.342,321.5,455.342,325.5,451.342,329.5,460.342,325.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DeltaFIFO to KeyListerGetter--><path d="M310.5,433.563 C310.5,450.213 310.5,466.3473 310.5,479.8616 " fill="none" id="DeltaFIFO-KeyListerGetter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="310.5,420.14,306.5,426.14,310.5,432.14,314.5,426.14,310.5,420.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DeltaCompressor to DeltaFIFO--><path d="M161.088,325.5 C168.323,325.5 175.557,325.5 182.792,325.5 " fill="none" id="DeltaCompressor-DeltaFIFO" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="195.815,325.5,189.815,321.5,183.815,325.5,189.815,329.5,195.815,325.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Deltas to Delta--><path d="M545.603,325.5 C552.867,325.5 560.13,325.5 567.393,325.5 " fill="none" id="Deltas-Delta" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="532.529,325.5,538.529,329.5,544.529,325.5,538.529,321.5,532.529,325.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--link KeyLister to KeyListerGetter--><path d="M210.562,517 C217.882,517 225.202,517 232.521,517 " fill="none" id="KeyLister-KeyListerGetter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="245.697,517,239.697,513,233.697,517,239.697,521,245.697,517" style="stroke: #A80036; stroke-width: 1.0;"/><!--link KeyListerGetter to KeyGetter--><path d="M388.566,517 C395.692,517 402.819,517 409.946,517 " fill="none" id="KeyListerGetter-KeyGetter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="375.305,517,381.305,521,387.305,517,381.305,513,375.305,517" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
interface Queue {
  Store
  Pop(PopProcessFunc) (interface{}, error)
  AddIfNotPresent(interface{}) error
  HasSynced() bool
  Close()
}
Queue o. Store

interface Store {
  Add(obj interface{}) error
  Update(obj interface{}) error
  Delete(obj interface{}) error
  List() []interface{}
  ListKeys() []string
  Get(obj interface{}) (item interface{}, exists bool, err error)
  GetByKey(key string) (item interface{}, exists bool, err error)
  Replace([]interface{}, string) error
  Resync() error
}

class DeltaFIFO {
  +lock sync.RWMutex
  +cond sync.Cond
  +items map[string]Deltas
  +queue []string
  +populated bool
  +initialPopulationCount int
  +keyFunc KeyFunc
  +deltaCompressor DeltaCompressor
  +knownObjects KeyListerGetter
  +closed     bool
  +closedLock sync.Mutex
}
Queue <|.. DeltaFIFO
DeltaFIFO .> Deltas
DeltaFIFO o.. KeyListerGetter
DeltaCompressor .o DeltaFIFO

Deltas o. Delta

class Delta {
	Type   DeltaType
	Object interface{}
}
note right of Delta
type Deltas []Delta
type DeltaType string
type KeyFunc func(obj interface{})
     (string, error)
end note

interface KeyLister {
	ListKeys() []string
}

interface KeyGetter {
	GetByKey(key string) (interface{}, bool, error)
}

interface KeyListerGetter {
	KeyLister
	KeyGetter
}
KeyListerGetter o.left. KeyLister
KeyListerGetter o.right. KeyGetter

interface DeltaCompressor {
	Compress(Deltas) Deltas
}
@enduml

PlantUML version 1.2017.16beta5(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>