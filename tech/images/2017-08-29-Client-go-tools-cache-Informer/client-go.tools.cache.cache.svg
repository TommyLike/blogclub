<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="809px" preserveAspectRatio="none" style="width:943px;height:809px;" version="1.1" viewBox="0 0 943 809" width="943px" zoomAndPan="magnify"><defs><filter height="300%" id="fqh2qf22hdper" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="237" x="351" y="16.708">client-go.tools.cache.cache</text><!--class cache--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="73.6094" id="cache" style="stroke: #A80036; stroke-width: 1.5;" width="205" x="115.5" y="220.4531"/><ellipse cx="194.75" cy="236.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M197.0938,232.125 L197.2656,232.2031 C197.4844,231.8906 197.6875,231.7969 197.9844,231.7969 C198.2813,231.7969 198.5625,231.9375 198.7188,232.2031 C198.8125,232.3594 198.8281,232.4844 198.8281,232.9219 L198.8281,234.3438 C198.8281,234.7656 198.7969,234.9531 198.6875,235.1094 C198.5156,235.3281 198.25,235.4688 197.9844,235.4688 C197.7656,235.4688 197.5313,235.3594 197.3906,235.2188 C197.25,235.0938 197.2188,234.9688 197.1563,234.5625 C197.0625,234.1563 196.8906,233.9375 196.4063,233.6563 C195.9375,233.4063 195.3281,233.25 194.75,233.25 C193.0156,233.25 191.7656,234.5625 191.7656,236.3438 L191.7656,237.4375 C191.7656,239.1406 193.0625,240.2344 195.1094,240.2344 C195.875,240.2344 196.5625,240.1094 196.9844,239.8438 C197.1719,239.75 197.1719,239.75 197.625,239.2656 C197.8125,239.0781 198.0156,239 198.2344,239 C198.7031,239 199.0938,239.3906 199.0938,239.8438 C199.0938,240.2344 198.7656,240.6875 198.1875,241.0938 C197.4375,241.6406 196.2813,241.9375 195.0625,241.9375 C192.1719,241.9375 190.0625,240.0469 190.0625,237.4688 L190.0625,236.3438 C190.0625,233.625 192.0625,231.5469 194.6875,231.5469 C195.5625,231.5469 196.1563,231.6875 197.0938,232.125 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="215.25" y="240.6074">cache</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="116.5" x2="319.5" y1="252.4531" y2="252.4531"/><ellipse cx="126.5" cy="264.3555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="135.5" y="266.6636">cacheStorage ThreadSafeStore</text><ellipse cx="126.5" cy="277.1602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="135.5" y="279.4683">keyFunc KeyFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="116.5" x2="319.5" y1="286.0625" y2="286.0625"/><!--class Indexer--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="176.0469" id="Indexer" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="355.5" y="169.4531"/><ellipse cx="466.75" cy="185.4531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M467.7031,182.2344 L467.7031,188.75 L469.4219,188.75 C469.875,188.75 470.0156,188.7813 470.1875,188.9063 C470.4219,189.0781 470.5313,189.3281 470.5313,189.6094 C470.5313,190.1719 470.1719,190.4531 469.4219,190.4531 L464.2813,190.4531 C463.875,190.4531 463.6719,190.4063 463.5156,190.2813 C463.2969,190.125 463.1563,189.8594 463.1563,189.6094 C463.1563,189.3125 463.3125,189.0313 463.5625,188.875 C463.7188,188.7656 463.8438,188.75 464.2813,188.75 L466,188.75 L466,182.2344 L464.2813,182.2344 C463.8594,182.2344 463.6719,182.2031 463.5156,182.0938 C463.2969,181.9219 463.1563,181.6719 463.1563,181.3906 C463.1563,181.1094 463.3125,180.8125 463.5625,180.6563 C463.7188,180.5625 463.8438,180.5469 464.2813,180.5469 L469.4219,180.5469 C469.875,180.5469 470.0156,180.5781 470.1875,180.6875 C470.4219,180.8594 470.5313,181.125 470.5313,181.3906 C470.5313,181.6875 470.3906,181.9688 470.125,182.125 C470,182.2031 469.8125,182.2344 469.4219,182.2344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="487.25" y="189.6074">Indexer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="356.5" x2="633.5" y1="201.4531" y2="201.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="361.5" y="215.6636">Store</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="356.5" x2="633.5" y1="222.2578" y2="222.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="361.5" y="236.4683">Index(indexName string, obj interface{})</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="361.5" y="249.2729">..([]interface{}, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="361.5" y="262.0776">IndexKeys(indexName, indexKey string)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="361.5" y="274.8823">..([]string, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="361.5" y="287.687">ListIndexFuncValues(indexName string) []string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="361.5" y="300.4917">ByIndex(indexName, indexKey string)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="361.5" y="313.2964">..([]interface{}, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="361.5" y="326.1011">GetIndexers() Indexers</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="361.5" y="338.9058">AddIndexers(newIndexers Indexers) error</text><!--class ThreadSafeStore--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="227.2656" id="ThreadSafeStore" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="44" y="411.9531"/><ellipse cx="168.75" cy="427.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M169.7031,424.7344 L169.7031,431.25 L171.4219,431.25 C171.875,431.25 172.0156,431.2813 172.1875,431.4063 C172.4219,431.5781 172.5313,431.8281 172.5313,432.1094 C172.5313,432.6719 172.1719,432.9531 171.4219,432.9531 L166.2813,432.9531 C165.875,432.9531 165.6719,432.9063 165.5156,432.7813 C165.2969,432.625 165.1563,432.3594 165.1563,432.1094 C165.1563,431.8125 165.3125,431.5313 165.5625,431.375 C165.7188,431.2656 165.8438,431.25 166.2813,431.25 L168,431.25 L168,424.7344 L166.2813,424.7344 C165.8594,424.7344 165.6719,424.7031 165.5156,424.5938 C165.2969,424.4219 165.1563,424.1719 165.1563,423.8906 C165.1563,423.6094 165.3125,423.3125 165.5625,423.1563 C165.7188,423.0625 165.8438,423.0469 166.2813,423.0469 L171.4219,423.0469 C171.875,423.0469 172.0156,423.0781 172.1875,423.1875 C172.4219,423.3594 172.5313,423.625 172.5313,423.8906 C172.5313,424.1875 172.3906,424.4688 172.125,424.625 C172,424.7031 171.8125,424.7344 171.4219,424.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="189.25" y="432.1074">ThreadSafeStore</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45" x2="407" y1="443.9531" y2="443.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="45" x2="407" y1="451.9531" y2="451.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="50" y="466.1636">Add(key string, obj interface{})</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="50" y="478.9683">Update(key string, obj interface{})</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="50" y="491.7729">Delete(key string)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="50" y="504.5776">Get(key string) (item interface{}, exists bool)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="50" y="517.3823">List() []interface{}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="50" y="530.187">ListKeys() []string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="50" y="542.9917">Replace(map[string]interface{}, string)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="50" y="555.7964">Index(indexName string, obj interface{}) ([]interface{}, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="50" y="568.6011">IndexKeys(indexName, indexKey string) ([]string, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="50" y="581.4058">ListIndexFuncValues(name string) []string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="50" y="594.2104">ByIndex(indexName, indexKey string) ([]interface{}, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="50" y="607.0151">GetIndexers() Indexers</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="50" y="619.8198">AddIndexers(newIndexers Indexers) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="50" y="632.6245">Resync() error</text><!--class KeyListerGetter--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="73.6094" id="KeyListerGetter" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="153.5" y="28.9531"/><ellipse cx="168.5" cy="44.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M169.4531,41.7344 L169.4531,48.25 L171.1719,48.25 C171.625,48.25 171.7656,48.2813 171.9375,48.4063 C172.1719,48.5781 172.2813,48.8281 172.2813,49.1094 C172.2813,49.6719 171.9219,49.9531 171.1719,49.9531 L166.0313,49.9531 C165.625,49.9531 165.4219,49.9063 165.2656,49.7813 C165.0469,49.625 164.9063,49.3594 164.9063,49.1094 C164.9063,48.8125 165.0625,48.5313 165.3125,48.375 C165.4688,48.2656 165.5938,48.25 166.0313,48.25 L167.75,48.25 L167.75,41.7344 L166.0313,41.7344 C165.6094,41.7344 165.4219,41.7031 165.2656,41.5938 C165.0469,41.4219 164.9063,41.1719 164.9063,40.8906 C164.9063,40.6094 165.0625,40.3125 165.3125,40.1563 C165.4688,40.0625 165.5938,40.0469 166.0313,40.0469 L171.1719,40.0469 C171.625,40.0469 171.7656,40.0781 171.9375,40.1875 C172.1719,40.3594 172.2813,40.625 172.2813,40.8906 C172.2813,41.1875 172.1406,41.4688 171.875,41.625 C171.75,41.7031 171.5625,41.7344 171.1719,41.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="182.5" y="49.1074">KeyListerGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="154.5" x2="281.5" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="159.5" y="75.1636">KeyLister</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="159.5" y="87.9683">KeyGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="154.5" x2="281.5" y1="94.5625" y2="94.5625"/><!--class Store--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="188.8516" id="Store" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="669.5" y="162.9531"/><ellipse cx="765.75" cy="178.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M766.7031,175.7344 L766.7031,182.25 L768.4219,182.25 C768.875,182.25 769.0156,182.2813 769.1875,182.4063 C769.4219,182.5781 769.5313,182.8281 769.5313,183.1094 C769.5313,183.6719 769.1719,183.9531 768.4219,183.9531 L763.2813,183.9531 C762.875,183.9531 762.6719,183.9063 762.5156,183.7813 C762.2969,183.625 762.1563,183.3594 762.1563,183.1094 C762.1563,182.8125 762.3125,182.5313 762.5625,182.375 C762.7188,182.2656 762.8438,182.25 763.2813,182.25 L765,182.25 L765,175.7344 L763.2813,175.7344 C762.8594,175.7344 762.6719,175.7031 762.5156,175.5938 C762.2969,175.4219 762.1563,175.1719 762.1563,174.8906 C762.1563,174.6094 762.3125,174.3125 762.5625,174.1563 C762.7188,174.0625 762.8438,174.0469 763.2813,174.0469 L768.4219,174.0469 C768.875,174.0469 769.0156,174.0781 769.1875,174.1875 C769.4219,174.3594 769.5313,174.625 769.5313,174.8906 C769.5313,175.1875 769.3906,175.4688 769.125,175.625 C769,175.7031 768.8125,175.7344 768.4219,175.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="786.25" y="183.1074">Store</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="670.5" x2="903.5" y1="194.9531" y2="194.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="670.5" x2="903.5" y1="202.9531" y2="202.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="675.5" y="217.1636">Add(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="675.5" y="229.9683">Update(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="675.5" y="242.7729">Delete(obj interface{}) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="675.5" y="255.5776">List() []interface{}</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="675.5" y="268.3823">ListKeys() []string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="675.5" y="281.187">Get(obj interface{}) (item interface{},</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="675.5" y="293.9917">..exists bool, err error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="675.5" y="306.7964">GetByKey(key string) (item interface{},</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="675.5" y="319.6011">..exists bool, err error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="675.5" y="332.4058">Replace([]interface{}, string) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="675.5" y="345.2104">Resync() error</text><!--class Indexers--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="48" id="Indexers" style="stroke: #A80036; stroke-width: 1.5;" width="85" x="443.5" y="501.4531"/><ellipse cx="458.5" cy="517.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M460.8438,513.125 L461.0156,513.2031 C461.2344,512.8906 461.4375,512.7969 461.7344,512.7969 C462.0313,512.7969 462.3125,512.9375 462.4688,513.2031 C462.5625,513.3594 462.5781,513.4844 462.5781,513.9219 L462.5781,515.3438 C462.5781,515.7656 462.5469,515.9531 462.4375,516.1094 C462.2656,516.3281 462,516.4688 461.7344,516.4688 C461.5156,516.4688 461.2813,516.3594 461.1406,516.2188 C461,516.0938 460.9688,515.9688 460.9063,515.5625 C460.8125,515.1563 460.6406,514.9375 460.1563,514.6563 C459.6875,514.4063 459.0781,514.25 458.5,514.25 C456.7656,514.25 455.5156,515.5625 455.5156,517.3438 L455.5156,518.4375 C455.5156,520.1406 456.8125,521.2344 458.8594,521.2344 C459.625,521.2344 460.3125,521.1094 460.7344,520.8438 C460.9219,520.75 460.9219,520.75 461.375,520.2656 C461.5625,520.0781 461.7656,520 461.9844,520 C462.4531,520 462.8438,520.3906 462.8438,520.8438 C462.8438,521.2344 462.5156,521.6875 461.9375,522.0938 C461.1875,522.6406 460.0313,522.9375 458.8125,522.9375 C455.9219,522.9375 453.8125,521.0469 453.8125,518.4688 L453.8125,517.3438 C453.8125,514.625 455.8125,512.5469 458.4375,512.5469 C459.3125,512.5469 459.9063,512.6875 460.8438,513.125 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="472.5" y="521.6074">Indexers</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="444.5" x2="527.5" y1="533.4531" y2="533.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="444.5" x2="527.5" y1="541.4531" y2="541.4531"/><!--class threadSafeMap--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="99.2188" id="threadSafeMap" style="stroke: #A80036; stroke-width: 1.5;" width="192" x="342" y="698.9531"/><ellipse cx="385.8" cy="714.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M388.1438,710.625 L388.3156,710.7031 C388.5344,710.3906 388.7375,710.2969 389.0344,710.2969 C389.3313,710.2969 389.6125,710.4375 389.7688,710.7031 C389.8625,710.8594 389.8781,710.9844 389.8781,711.4219 L389.8781,712.8438 C389.8781,713.2656 389.8469,713.4531 389.7375,713.6094 C389.5656,713.8281 389.3,713.9688 389.0344,713.9688 C388.8156,713.9688 388.5813,713.8594 388.4406,713.7188 C388.3,713.5938 388.2688,713.4688 388.2063,713.0625 C388.1125,712.6563 387.9406,712.4375 387.4563,712.1563 C386.9875,711.9063 386.3781,711.75 385.8,711.75 C384.0656,711.75 382.8156,713.0625 382.8156,714.8438 L382.8156,715.9375 C382.8156,717.6406 384.1125,718.7344 386.1594,718.7344 C386.925,718.7344 387.6125,718.6094 388.0344,718.3438 C388.2219,718.25 388.2219,718.25 388.675,717.7656 C388.8625,717.5781 389.0656,717.5 389.2844,717.5 C389.7531,717.5 390.1438,717.8906 390.1438,718.3438 C390.1438,718.7344 389.8156,719.1875 389.2375,719.5938 C388.4875,720.1406 387.3313,720.4375 386.1125,720.4375 C383.2219,720.4375 381.1125,718.5469 381.1125,715.9688 L381.1125,714.8438 C381.1125,712.125 383.1125,710.0469 385.7375,710.0469 C386.6125,710.0469 387.2063,710.1875 388.1438,710.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="406.2" y="719.1074">threadSafeMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="343" x2="533" y1="730.9531" y2="730.9531"/><ellipse cx="353" cy="742.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="362" y="745.1636">lock  +sync.RWMutex</text><ellipse cx="353" cy="755.6602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="362" y="757.9683">items map[string]interface{}</text><ellipse cx="353" cy="768.4648" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="362" y="770.7729">indexers Indexers</text><ellipse cx="353" cy="781.2695" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="362" y="783.5776">indices Indices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="343" x2="533" y1="790.1719" y2="790.1719"/><!--class Indices--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="48" id="Indices" style="stroke: #A80036; stroke-width: 1.5;" width="76" x="612" y="501.4531"/><ellipse cx="627" cy="517.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M629.3438,513.125 L629.5156,513.2031 C629.7344,512.8906 629.9375,512.7969 630.2344,512.7969 C630.5313,512.7969 630.8125,512.9375 630.9688,513.2031 C631.0625,513.3594 631.0781,513.4844 631.0781,513.9219 L631.0781,515.3438 C631.0781,515.7656 631.0469,515.9531 630.9375,516.1094 C630.7656,516.3281 630.5,516.4688 630.2344,516.4688 C630.0156,516.4688 629.7813,516.3594 629.6406,516.2188 C629.5,516.0938 629.4688,515.9688 629.4063,515.5625 C629.3125,515.1563 629.1406,514.9375 628.6563,514.6563 C628.1875,514.4063 627.5781,514.25 627,514.25 C625.2656,514.25 624.0156,515.5625 624.0156,517.3438 L624.0156,518.4375 C624.0156,520.1406 625.3125,521.2344 627.3594,521.2344 C628.125,521.2344 628.8125,521.1094 629.2344,520.8438 C629.4219,520.75 629.4219,520.75 629.875,520.2656 C630.0625,520.0781 630.2656,520 630.4844,520 C630.9531,520 631.3438,520.3906 631.3438,520.8438 C631.3438,521.2344 631.0156,521.6875 630.4375,522.0938 C629.6875,522.6406 628.5313,522.9375 627.3125,522.9375 C624.4219,522.9375 622.3125,521.0469 622.3125,518.4688 L622.3125,517.3438 C622.3125,514.625 624.3125,512.5469 626.9375,512.5469 C627.8125,512.5469 628.4063,512.6875 629.3438,513.125 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="44" x="641" y="521.6074">Indices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="613" x2="687" y1="533.4531" y2="533.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="613" x2="687" y1="541.4531" y2="541.4531"/><polygon fill="#FBFB77" filter="url(#fqh2qf22hdper)" points="569,712.9531,569,783.4844,921,783.4844,921,722.9531,911,712.9531,569,712.9531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="569,712.9531,569,783.4844,921,783.4844,921,722.9531,911,712.9531,734.028,712.9531,659.987,549.6861,726.028,712.9531,569,712.9531" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="911" x2="911" y1="712.9531" y2="722.9531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="921" x2="911" y1="722.9531" y2="722.9531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="214" x="575" y="730.02">type Index map[string]sets.String</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="189" x="575" y="745.1528">type Indices map[string]Index</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="229" x="575" y="760.2856">type Indexers map[string]IndexFunc</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="331" x="575" y="775.4185">type IndexFunc func(obj interface{}) ([]string, error)</text><!--class KeyLister--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="60.8047" id="KeyLister" style="stroke: #A80036; stroke-width: 1.5;" width="112" x="6" y="35.4531"/><ellipse cx="31.35" cy="51.4531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32.3031,48.2344 L32.3031,54.75 L34.0219,54.75 C34.475,54.75 34.6156,54.7813 34.7875,54.9063 C35.0219,55.0781 35.1313,55.3281 35.1313,55.6094 C35.1313,56.1719 34.7719,56.4531 34.0219,56.4531 L28.8813,56.4531 C28.475,56.4531 28.2719,56.4063 28.1156,56.2813 C27.8969,56.125 27.7563,55.8594 27.7563,55.6094 C27.7563,55.3125 27.9125,55.0313 28.1625,54.875 C28.3188,54.7656 28.4438,54.75 28.8813,54.75 L30.6,54.75 L30.6,48.2344 L28.8813,48.2344 C28.4594,48.2344 28.2719,48.2031 28.1156,48.0938 C27.8969,47.9219 27.7563,47.6719 27.7563,47.3906 C27.7563,47.1094 27.9125,46.8125 28.1625,46.6563 C28.3188,46.5625 28.4438,46.5469 28.8813,46.5469 L34.0219,46.5469 C34.475,46.5469 34.6156,46.5781 34.7875,46.6875 C35.0219,46.8594 35.1313,47.125 35.1313,47.3906 C35.1313,47.6875 34.9906,47.9688 34.725,48.125 C34.6,48.2031 34.4125,48.2344 34.0219,48.2344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="47.65" y="55.6074">KeyLister</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="117" y1="67.4531" y2="67.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="117" y1="75.4531" y2="75.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="12" y="89.6636">ListKeys() []string</text><!--class KeyGetter--><rect fill="#FEFECE" filter="url(#fqh2qf22hdper)" height="60.8047" id="KeyGetter" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="317.5" y="35.4531"/><ellipse cx="419.25" cy="51.4531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M420.2031,48.2344 L420.2031,54.75 L421.9219,54.75 C422.375,54.75 422.5156,54.7813 422.6875,54.9063 C422.9219,55.0781 423.0313,55.3281 423.0313,55.6094 C423.0313,56.1719 422.6719,56.4531 421.9219,56.4531 L416.7813,56.4531 C416.375,56.4531 416.1719,56.4063 416.0156,56.2813 C415.7969,56.125 415.6563,55.8594 415.6563,55.6094 C415.6563,55.3125 415.8125,55.0313 416.0625,54.875 C416.2188,54.7656 416.3438,54.75 416.7813,54.75 L418.5,54.75 L418.5,48.2344 L416.7813,48.2344 C416.3594,48.2344 416.1719,48.2031 416.0156,48.0938 C415.7969,47.9219 415.6563,47.6719 415.6563,47.3906 C415.6563,47.1094 415.8125,46.8125 416.0625,46.6563 C416.2188,46.5625 416.3438,46.5469 416.7813,46.5469 L421.9219,46.5469 C422.375,46.5469 422.5156,46.5781 422.6875,46.6875 C422.9219,46.8594 423.0313,47.125 423.0313,47.3906 C423.0313,47.6875 422.8906,47.9688 422.625,48.125 C422.5,48.2031 422.3125,48.2344 421.9219,48.2344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="63" x="439.75" y="55.6074">KeyGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="318.5" x2="591.5" y1="67.4531" y2="67.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="318.5" x2="591.5" y1="75.4531" y2="75.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="323.5" y="89.6636">GetByKey(key string) (interface{}, bool, error)</text><!--link cache to Indexer--><path d="M320.522,257.4531 C325.41,257.4531 330.298,257.4531 335.186,257.4531 " fill="none" id="cache-Indexer" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="335.282,250.4531,355.282,257.4531,335.282,264.4531,335.282,250.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link cache to ThreadSafeStore--><path d="M219.484,307.7881 C220.365,337.0751 221.519,375.4751 222.612,411.8011 " fill="none" id="cache-ThreadSafeStore" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="219.087,294.6041,215.2695,300.7218,219.4483,306.5987,223.2658,300.481,219.087,294.6041" style="stroke: #A80036; stroke-width: 1.0;"/><!--link KeyListerGetter to cache--><path d="M218,123.4481 C218,154.7791 218,192.8171 218,220.1761 " fill="none" id="KeyListerGetter-cache" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="211,123.0431,218,103.0431,225,123.0431,211,123.0431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Indexer to Store--><path d="M647.933,257.4531 C655.031,257.4531 662.128,257.4531 669.226,257.4531 " fill="none" id="Indexer-Store" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="634.727,257.4531,640.727,261.4531,646.727,257.4531,640.727,253.4531,634.727,257.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Indexer to Indexers--><path d="M492.053,345.5511 C490.289,397.6851 488.162,460.5441 486.957,496.1681 " fill="none" id="Indexer-Indexers" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="486.786,501.2221,491.0872,492.3621,486.9546,496.225,483.0917,492.0924,486.786,501.2221" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ThreadSafeStore to Indexers--><path d="M408.051,525.4531 C418.077,525.4531 428.103,525.4531 438.129,525.4531 " fill="none" id="ThreadSafeStore-Indexers" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="443.372,525.4531,434.372,521.4531,438.372,525.4531,434.372,529.4531,443.372,525.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ThreadSafeStore to threadSafeMap--><path d="M348.259,653.9021 C363.496,669.7871 378.275,685.1921 391.294,698.7641 " fill="none" id="ThreadSafeStore-threadSafeMap" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="342.967,658.4981,334.174,639.2191,353.07,648.8061,342.967,658.4981" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Indexers to threadSafeMap--><path d="M480.954,549.6861 C474.009,581.6611 461.251,640.3991 451.437,685.5851 " fill="none" id="Indexers-threadSafeMap" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="448.626,698.5314,453.8081,693.5168,451.1723,686.8047,445.9902,691.8193,448.626,698.5314" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Indices to threadSafeMap--><path d="M629.131,549.5231 C608.305,572.4271 575.277,608.4341 546,638.9531 C530.081,655.5471 512.587,673.3181 496.4,689.5741 " fill="none" id="Indices-threadSafeMap" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="487.042,698.9508,494.1116,697.5295,495.5187,690.457,488.4491,691.8783,487.042,698.9508" style="stroke: #A80036; stroke-width: 1.0;"/><!--link KeyLister to KeyListerGetter--><path d="M118.062,65.9531 C125.382,65.9531 132.702,65.9531 140.021,65.9531 " fill="none" id="KeyLister-KeyListerGetter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="153.197,65.9531,147.197,61.9531,141.197,65.9531,147.197,69.9531,153.197,65.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link KeyListerGetter to KeyGetter--><path d="M296.066,65.9531 C303.192,65.9531 310.319,65.9531 317.446,65.9531 " fill="none" id="KeyListerGetter-KeyGetter" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#FFFFFF" points="282.805,65.9531,288.805,69.9531,294.805,65.9531,288.805,61.9531,282.805,65.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
title client-go.tools.cache.cache

class cache {
  +cacheStorage ThreadSafeStore
  +keyFunc KeyFunc
}
cache .|> Indexer
cache o.. ThreadSafeStore
KeyListerGetter <|.. cache

interface Indexer {
  Store
  Index(indexName string, obj interface{})
  ..([]interface{}, error)
  IndexKeys(indexName, indexKey string)
  ..([]string, error)
  ListIndexFuncValues(indexName string) []string
  ByIndex(indexName, indexKey string)
  ..([]interface{}, error)
  GetIndexers() Indexers
  AddIndexers(newIndexers Indexers) error
}
Indexer o. Store
Indexer ..> Indexers

interface Store {
  Add(obj interface{}) error
  Update(obj interface{}) error
  Delete(obj interface{}) error
  List() []interface{}
  ListKeys() []string
  Get(obj interface{}) (item interface{},
  ..exists bool, err error)
  GetByKey(key string) (item interface{},
  ..exists bool, err error)
  Replace([]interface{}, string) error
  Resync() error
}

interface ThreadSafeStore {
  Add(key string, obj interface{})
  Update(key string, obj interface{})
  Delete(key string)
  Get(key string) (item interface{}, exists bool)
  List() []interface{}
  ListKeys() []string
  Replace(map[string]interface{}, string)
  Index(indexName string, obj interface{}) ([]interface{}, error)
  IndexKeys(indexName, indexKey string) ([]string, error)
  ListIndexFuncValues(name string) []string
  ByIndex(indexName, indexKey string) ([]interface{}, error)
  GetIndexers() Indexers
  AddIndexers(newIndexers Indexers) error
  Resync() error
}
ThreadSafeStore .> Indexers

class threadSafeMap {
  +lock  +sync.RWMutex
  +items map[string]interface{}
  +indexers Indexers
  +indices Indices
}
ThreadSafeStore <|.. threadSafeMap
Indexers ..o threadSafeMap
Indices ..o threadSafeMap

note bottom of Indices
type Index map[string]sets.String
type Indices map[string]Index
type Indexers map[string]IndexFunc
type IndexFunc func(obj interface{}) ([]string, error)
end note

interface KeyLister {
	ListKeys() []string
}

interface KeyGetter {
	GetByKey(key string) (interface{}, bool, error)
}

interface KeyListerGetter {
	KeyLister
	KeyGetter
}
KeyListerGetter o.left. KeyLister
KeyListerGetter o.right. KeyGetter
@enduml

PlantUML version 1.2017.16beta5(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>